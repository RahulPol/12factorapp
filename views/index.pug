<!DOCTYPE html>
html(lang="en")
    head
        meta(charset="UTF-8")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        meta(property="og:title", content="12 Factor App")
        meta(property="og:image", content="/images/photo-1.png")  
        meta(property="og:description", content="12 Factor compatible node js app | by Rahul Pol")
        meta(property="og:url", content="https://twelvefactor-app.herokuapp.com/")
        title 12 Factor App
        link(rel="icon", href="/images/favicon.ico")
        link(rel="stylesheet", href="/css/main.css")        
    body
        div.backdrop
        header.main-header
            button#side-menu-toggle Menu
            nav.main-header__nav
                ul.main-header__item-list
                    li.main-header__item
                        a(href="/", class="active") Home
                    li.main-header__item
                        a(href="/api-docs") Swagger
            nav.mobile-nav
                ul.mobile-nav__item-list
                    li.main-header__item
                        a(href="/", class="active") Home
                    li.main-header__item
                        a(href="/api-docs") Swagger  
        .content
            .hero 
                .text-content
                    .title  12 Factor Compatible Node JS API                                        
                .action-content            
                    .swaggerButton(onclick="window.location='/api-docs';")                                               
                        img(src="../images/swagger-logo.png", alt="", srcset="")
                        p Swagger
            .factors
                .factor-card
                    .factor-title I. #[a(href="https://12factor.net/codebase" target="_blank") Codebase]
                    .factor-content 
                        .factor-content-desc One codebase tracked in revision control, many deploys.
                        .factor-content-explanation
                            .factor-content-explanation-header How we do it
                            .factor-content-explanation-desc This code is tracked on github. #[a(href="https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow" target="_blank") Git flow] can be used to manage branches for releases.
                .factor-card
                    .factor-title II. #[a(href="https://12factor.net/dependencies" target="_blank") Dependencies]
                    .factor-content 
                        .factor-content-desc Explicitly declare and isolate dependencies.
                        .factor-content-explanation
                            .factor-content-explanation-header How we do it
                            .factor-content-explanation-desc #[a(href="https://github.com/RahulPol/12factorapp/blob/main/package.json" target="_blank") package.json] declare and lock dependencies to specific versions. npm installs modules to a local node_modules dir so each application's dependencies are isolated from the rest of the system.
                .factor-card
                    .factor-title III. #[a(href="https://12factor.net/config") Config]
                    .factor-content 
                        .factor-content-desc Store config in the environment.
                        .factor-content-explanation
                            .factor-content-explanation-header How we do it
                            .factor-content-explanation-desc For localhost configuration is stored in environment variables and supplied through the .env file. For production configuration is supplied through config vars in deployment environment.
                                p The important point is, the config variables are stored and provided through environment.
                .factor-card
                    .factor-title IV. #[a(href="https://12factor.net/backing-services" target="_blank") Backing services]
                    .factor-content 
                        .factor-content-desc Treat backing services as attached resources.
                        .factor-content-explanation
                            .factor-content-explanation-header How we do it
                            .factor-content-explanation-desc We connect to the database via a connection url provided by the `DATABASE_URI` environment variable. If we needed to setup a new database, we would simply create a new database and bind the database to our application. We use a utility that will initiate either mongo or mysql database based on your environment variable. The same utility also gives database instance to your controller using dependency injection.
                .factor-card
                    .factor-title V. #[a(href="https://12factor.net/build-release-run" target="_blank") Build, release, run]
                    .factor-content 
                        .factor-content-desc Strictly separate build and run stages.
                        .factor-content-explanation
                            .factor-content-explanation-header How we do it
                            .factor-content-explanation-desc `package.json` allows to configure "scripts" so that we can codify various tasks. `npm run build` is used to build this application and produces minified javascript and css files to be served as static assets.
                                p For this app we have `npm run dev` script to build the app, `npm start` to run the app and `Procfile` to release the app.
                .factor-card
                    .factor-title VI. #[a(href="https://12factor.net/processes" target="_blank") Processes]
                    .factor-content 
                        .factor-content-desc Execute the app as one or more stateless processes.
                        .factor-content-explanation
                            .factor-content-explanation-header How we do it (Doubtful, check again)
                            .factor-content-explanation-desc The node js app is run as an independent process in v8 engine. 
                                p By stateless, means the process store-nothing and share-nothing between requests. Any data that needs to persist must be stored in a stateful backing service, typically a database. To ensure this principle, we have not used any express session or any mechanism that stores data in process memory.
                .factor-card
                    .factor-title VII. #[a(href="https://12factor.net/port-binding" target="_blank") Port binding]
                    .factor-content 
                        .factor-content-desc Export services via port binding.
                        .factor-content-explanation
                            .factor-content-explanation-header How we do it
                            .factor-content-explanation-desc The port-binding approach means that one app can become the backing service for another app, by providing the URL to the backing app as a resource handle in the config for the consuming app.
                                p Heroku assigns your application instance a port on the host machine and exposes it through the PORT environment variable
                .factor-card
                    .factor-title VIII. #[a(href="https://12factor.net/concurrency" target="_blank") Concurrency]
                    .factor-content 
                        .factor-content-desc Scale out via the process model
                        .factor-content-explanation
                            .factor-content-explanation-header How we do it (Doubtful, check again)
                            .factor-content-explanation-desc SIGTERM SIGINT above?
                .factor-card
                    .factor-title IX. #[a(href="https://12factor.net/disposability" target="_blank") Disposability]
                    .factor-content 
                        .factor-content-desc Maximize robustness with fast startup and graceful shutdown.
                        .factor-content-explanation
                            .factor-content-explanation-header How we do it
                            .factor-content-explanation-desc This code is tracked on github. Git flow can be used to manage branches for releases.
                .factor-card
                    .factor-title X. #[a(href="https://12factor.net/dev-prod-parity" target="_blank") Dev/prod parity]
                    .factor-content 
                        .factor-content-desc Keep development, staging, and production as similar as possible
                        .factor-content-explanation
                            .factor-content-explanation-header How we do it
                            .factor-content-explanation-desc We are using heroku's Github connection to auto deploy master branch. And for all new feature we create new branch and merge it later to master branch.
                .factor-card
                    .factor-title XI. #[a(href="https://12factor.net/logs" target="_blank") Logs]
                    .factor-content 
                        .factor-content-desc Treat logs as event streams.
                        .factor-content-explanation
                            .factor-content-explanation-header How we do it
                            .factor-content-explanation-desc We use winston as our logger. We use logging levels to provide feedback about how the application is working. Some of this feedback could warrant a bug fix.
                                p Warnings are conditions that are unexpected and might hint that a bug exists in the code.
                .factor-card
                    .factor-title XII. #[a(href="https://12factor.net/admin-processes" target="_blank") Admin processes]
                    .factor-content 
                        .factor-content-desc Run admin/management tasks as one-off processes.
                        .factor-content-explanation
                            .factor-content-explanation-header How we do it
                            .factor-content-explanation-desc Read explanation on twelve factor app
            .socialLinks
                a(href="https://www.linkedin.com/in/rahul-pol-409a2649/" rel="noreferrer" target="_blank")
                    img(src="/images/linkedIn.svg", alt="LinkedIn", title="LinkedIn")
                a(href="https://twitter.com/RahulPo52226157" rel="noreferrer" target="_blank")
                    img(src="/images/twitter.svg", alt="Twitter", title="Twitter")
                //- a(href="https://github.com/RahulPol" rel="noreferrer" target="_blank")
                //-     img(src="/images/github.png", alt="Github", title="Github")
                //- a(href="https://rahul-pol.medium.com/" rel="noreferrer" target="_blank")
                //-     img(src="/images/Medium.png", alt="Medium", title="Medium")
                a(href="/" )
                    img(src="/images/gmail.svg", alt="Mail", title="polrahul10@gmail.com")
        
        script(src="/js/index.js")